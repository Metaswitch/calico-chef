router id <%= node[:ipaddress] %>;

filter import_kernel {
  if ( net != ::/0 ) then {
     accept;
   }
   reject;
}

# Specify logging file
log /var/log/bird6.log all;
debug protocols all;

protocol kernel {
        learn;                  # Learn all alien routes from the kernel
        persist;                # Don't remove routes on bird shutdown
        scan time 2;            # Scan kernel routing table every 2 seconds
        device routes;
        import filter import_kernel;
        export all;             # Default is export none
#       kernel table 5;         # Kernel table to synchronize with (default: main)
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
        scan time 2;           # Scan interfaces every 2 seconds
}

protocol direct {
   debug all;
   interface "-dummy0", "dummy1", "eth*", "em*";
}

# Peer with all neighbours.
<% @bgp_neighbors.each_with_index do |n, index| %>
# <%= n[:fqdn] %>
protocol bgp <%= "peer#{index}" %> {
  description <%= "\"BGP Connection to #{n[:fqdn]}\"" %>;
  local as 64511;
  neighbor <%= n[:ip6address] %> as 64511;
  multihop;
  import all;
  export all;
  next hop self;    # Disable next hop processing and always advertise our
                    # local address as nexthop
  source address <%= node[:ip6address] %>;  # The local address we use for the TCP connection
}

<% end %>
